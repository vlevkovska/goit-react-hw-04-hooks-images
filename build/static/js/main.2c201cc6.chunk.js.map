{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/SearchBar/SearchBar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.jsx","Components/Loader/Loader.jsx","Components/Modal/Modal.jsx","Services/API.jsx","App.js","index.js","Components/SearchBar/SearchBar.module.css"],"names":["module","exports","Searchbar","state","inputValue","handleChange","event","setState","currentTarget","value","toLowerCase","trim","handleSubmit","preventDefault","target","toast","error","props","onSubmit","className","style","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","name","onChange","SearchFormInput","autoComplete","autoFocus","placeholder","Component","defaultProps","PropTypes","func","isRequired","ImageGalleryItem","webformatURL","tags","largeImageURL","onOpen","onClick","src","alt","ImageGalleryItemImage","ImageGallery","imgArr","e","dataset","source","map","id","Button","Loader","color","height","width","timeout","position","top","left","Modal","closeModalByESC","key","modalClose","window","addEventListener","removeEventListener","modalImg","Overlay","FetchImages","img","page","fetch","then","response","ok","json","Promise","reject","Error","Status","App","total","imgname","isModalOpen","status","handleLoadeMore","getImgFromFetch","pageNumber","hits","length","data","prevState","alert","scroll","catch","scrollTo","document","documentElement","scrollHeight","behavior","pageIncrement","hendelOpenModal","hendelCloseModal","prevProps","prevName","nextName","autoClose","toggleModalWindow","message","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c201cc6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2PaM5\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1dTac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3WI-V\",\"Modal\":\"Modal_Modal__2SsBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3_rty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__Ka68f\"};","import { toast } from \"react-toastify\";\r\nimport { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./SearchBar.module.css\";\r\n\r\nclass Searchbar extends Component {\r\n  static defaultProps = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n  state = { inputValue: \"\" };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      inputValue: event.currentTarget.value.toLowerCase().trim(),\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { value } = event.target[1];\r\n    if (value.trim() === \"\") {\r\n      return toast.error(\"Enter name of picture you are looking for!\");\r\n    }\r\n    this.props.onSubmit(this.state.inputValue); // отпарвка данных\r\n\r\n    this.setState({ inputValue: \"\" }); // очищение формы\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={style.Searchbar}>\r\n        <form onSubmit={this.handleSubmit} className={style.SearchForm}>\r\n          <button type=\"submit\" className={style.SearchFormButton}>\r\n            <span className={style.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            name=\"inputValue\"\r\n            value={this.state.inputValue}\r\n            onChange={this.handleChange}\r\n            className={style.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport style from \"./ImageGalleryItem.module.css\";\r\n\r\nfunction ImageGalleryItem({ webformatURL, tags, largeImageURL, onOpen }) {\r\n  return (\r\n    <li className={style.ImageGalleryItem}>\r\n      <img\r\n        onClick={onOpen}\r\n        data-source={largeImageURL}\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className={style.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  onOpen: PropTypes.func,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport style from \"./ImageGallery.module.css\";\r\n\r\nfunction ImageGallery({ imgArr, onOpen }) {\r\n  return (\r\n    <ul\r\n      className={style.ImageGallery}\r\n      onClick={(e) => onOpen(e.target.dataset.source)}\r\n    >\r\n      {imgArr.map(({ webformatURL, id, tags, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          id={id}\r\n          tags={tags}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          // onOpen={onOpen}\r\n        />\r\n      ))}\r\n      {/* {imgArr.map((imgArr) => (\r\n        <ImageGalleryItem key={imgArr.id} imgArr={imgArr} onOpen={onOpen} />\r\n      ))} */}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  imgArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onOpen: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./Button.module.css\";\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className={style.Button} onClick={onClick}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ReactLoaderSpinner from \"react-loader-spinner\";\r\n\r\nexport default class Loader extends Component {\r\n  render() {\r\n    return (\r\n      <ReactLoaderSpinner\r\n        type=\"Hearts\"\r\n        color=\"#85309f\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000} //3 secs\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"50%\",\r\n          left: \"47%\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Modal.module.css\";\r\n\r\nclass Modal extends Component {\r\n  static defaultProps = {\r\n    modalClose: PropTypes.func.isRequired,\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.closeModalByESC);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.closeModalByESC);\r\n  }\r\n\r\n  closeModalByESC = (e) => {\r\n    if (e.key !== \"Escape\") {\r\n      return;\r\n    }\r\n    this.props.modalClose();\r\n  };\r\n\r\n  render() {\r\n    const { modalImg, modalClose } = this.props;\r\n\r\n    return (\r\n      <div className={style.Overlay} onClick={modalClose}>\r\n        <div className={style.Modal}>\r\n          <img src={modalImg} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","function FetchImages(img, page) {\r\n  const API_KEY = \"23793880-43251762e8c5681d941546cf6\";\r\n\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${img}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`No pictures \"${img}\" were found`));\r\n  });\r\n}\r\n\r\n// const imagesAPI = { FetchImages };\r\n\r\nexport default FetchImages;\r\n","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Searchbar from \"./Components/SearchBar/SearchBar\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\nimport Button from \"./Components/Button/Button\";\nimport Loader from \"./Components/Loader/Loader\";\nimport Modal from \"./Components/Modal/Modal\";\n// import imagesApi from \"./Services/API\";\nimport FetchImages from \"./Services/API\";\n\nconst Status = {\n  IDLE: \"idle\", // стоїть на місці\n  PENDING: \"pending\", // очікується\n  RESOLVED: \"resolved\", // виконалось\n  REJECTED: \"rejected\", // відхилено\n};\n\nclass App extends Component {\n  state = {\n    // searchImg: null,\n    total: [],\n    imgname: \"\",\n    page: 1,\n    imgArr: [],\n    largeImageURL: \"\",\n    isModalOpen: false,\n    error: \"\",\n    status: Status.IDLE,\n    handleLoadeMore: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.inputValue;\n    const nextName = this.state.inputValue;\n    const { page } = this.state;\n    //\n    if (prevName !== nextName) {\n      this.setState({ imgArr: [], page: 1, status: \"pending\" });\n\n      this.getImgFromFetch(nextName, page);\n    }\n    if (prevState.page !== page && page !== 1) {\n      this.getImgFromFetch(nextName, page);\n    }\n  }\n  // componentDidUpdate(prevProps, prevState) {\n  //   const prevName = prevState.searchImg;\n  //   const nextName = this.state.searchImg;\n  //   const prevPage = prevState.page;\n  //   const nextPage = this.state.page;\n  //   if (prevName !== nextName) {\n  //     this.setState({ imgArr: [], page: 1, status: Status.PENDING });\n  //   }\n  //   if (prevName !== nextName || prevPage !== nextPage) {\n  //     this.FetchImages(nextName, nextPage);\n  //   }\n  // }\n\n  getImgFromFetch = (inputValue, pageNumber) => {\n    FetchImages(inputValue, pageNumber)\n      .then((imgArr) => {\n        if (!imgArr.hits.length) {\n          alert(\"No such pictures, try again\");\n          this.setState({\n            error: \"Something went wrong, please try again\",\n            status: \"rejected\",\n          });\n        } else {\n          const data = imgArr.hits.map(\n            ({ id, tags, webformatURL, largeImageURL }) => {\n              return {\n                id,\n                webformatURL,\n                tags,\n                largeImageURL,\n              };\n            }\n          );\n          this.setState((prevState) => ({\n            imgArr: [...prevState.imgArr, ...data],\n            status: Status.RESOLVED,\n            handleLoadeMore: true,\n          }));\n        }\n\n        this.scroll();\n      })\n      .catch((error) =>\n        this.setState({\n          error,\n          status: Status.REJECTED,\n        })\n      );\n  };\n  // getData = (data) => {\n  //   return data.map(({ id, tags, webformatURL, largeImageURL }) => {\n  //     return {\n  //       id: id,\n  //       webformatURL: webformatURL,\n  //       tags: tags,\n  //       largeImageURL: largeImageURL,\n  //     };\n  //   });\n  // };\n\n  // FetchImages = (nextName, nextPage) => {\n  //   imagesApi\n  //     .FetchImages(nextName, nextPage)\n  //     .then(({ hits }) => {\n  //       const data = this.getData(hits);\n  //       this.setState({ imgArr: data, status: \"resolved\" });\n\n  //       if (!hits.length) {\n  //         alert(\"No such pictures, try again\");\n  //         this.setState({\n  //           error: \"Something went wrong. Please try again\",\n  //           status: \"rejected\",\n  //         });\n  //       } else this.setState({ error: null });\n  //     })\n  //     .catch((error) => this.setState({ error, status: Status.REJECTED }));\n  // };\n\n  // handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   const { value } = event.target[1];\n  //   if (value.trim() === \"\") {\n  //     return toast.error(\"Enter name of picture you are looking for!\");\n  //   }\n\n  //   this.setState({\n  //     searchImg: value.toLowerCase(),\n  //     loading: true,\n  //     page: 1,\n  //     imgArr: [],\n  //   });\n  // };\n\n  // handleLoadeMore = (searchImg, page) => {\n  //   imagesApi\n  //     .FetchImages(searchImg, page)\n  //     .then(({ hits }) => {\n  //       const data = this.getData(hits);\n  //       this.setState((prev) => ({\n  //         imgArr: [...prev.imgArr, ...data],\n  //         status: \"resolved\",\n  //       }));\n  //       this.scroll();\n  //     })\n  //     .catch((error) => this.setState({ error, status: \"reject\" }));\n  // };\n\n  scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n  pageIncrement = () => {\n    return this.setState({\n      page: this.state.page + 1,\n      status: \"pending\",\n    });\n  };\n  handleSubmit = (inputValue) => {\n    this.setState({ inputValue, page: 1 });\n  };\n  hendelOpenModal = (img) => {\n    this.setState({\n      isModalOpen: true,\n      modalImg: img,\n    });\n  };\n\n  hendelCloseModal = () => {\n    this.setState({ isModalOpen: false, modalImg: \"\" });\n  };\n\n  // hendelOpenModal = (img) => {\n  //   this.setState({\n  //     isModalOpen: true,\n  //     modalImg: img,\n  //   });\n  // };\n\n  // hendelCloseModal = () => {\n  //   this.setState({ isModalOpen: false, modalImg: \"\" });\n  // };\n\n  render() {\n    const { imgArr, error, status, isModalOpen, modalImg, handleLoadeMore } =\n      this.state;\n    // const resolvedImg = status === Status.RESOLVED && imgArr.length > 11;\n    // loading, currentPage,\n    return (\n      <>\n        <ToastContainer autoClose={3000} />\n        <Searchbar onSubmit={this.handleSubmit} />\n        {status === Status.IDLE && (\n          <h2 className=\"invitation\">Use Search above!</h2>\n        )}\n        {status === Status.PENDING && (\n          <>\n            <ImageGallery imgArr={imgArr} onOpen={this.toggleModalWindow} />\n            <Loader />\n          </>\n        )}\n        {status === Status.REJECTED && <h1>{error.message}</h1>}\n\n        {status === Status.RESOLVED && (\n          <>\n            {/* {resolvedImg && ( */}\n            <ImageGallery imgArr={imgArr} onOpen={this.hendelOpenModal} />\n            {handleLoadeMore && <Button onClick={this.pageIncrement} />}\n          </>\n        )}\n        {/* {status === Status.PENDING && <Loader />}\n        {imgArr.length !== 0 && <Button onClick={this.handleLoadeMore} />} */}\n        {isModalOpen && (\n          <Modal modalImg={modalImg} modalClose={this.hendelCloseModal} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__2mzcr\",\"SearchForm\":\"SearchBar_SearchForm___ywuu\",\"SearchFormButton\":\"SearchBar_SearchFormButton__bXkGe\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__22KUj\",\"SearchFormInput\":\"SearchBar_SearchFormInput__3oCDe\"};"],"sourceRoot":""}